// –ú–ì–ù–û–í–ï–ù–ù–ê–Ø –ó–ê–ì–†–£–ó–ö–ê: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è –±–µ–∑ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
async function checkConnection() {
    const connectionEl = document.getElementById('connection-status');
    if (!connectionEl) return;
    
    const startTime = Date.now();
    
    try {
        // –£–°–ö–û–†–ï–ù–û: –¢–∞–π–º–∞—É—Ç –≤—Å–µ–≥–æ 3 —Å–µ–∫—É–Ω–¥—ã –≤–º–µ—Å—Ç–æ 8
        const response = await fetch('/api/stats', {
            method: 'GET',
            cache: 'no-cache',
            signal: AbortSignal.timeout(3000)
        });
        
        const endTime = Date.now();
        const responseTime = endTime - startTime;
        
        if (response.ok) {
            const data = await response.json();
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –¥–∞–Ω–Ω—ã–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ
            if (typeof data.totalCustomers === 'number') {
                updateConnectionStatus('online', responseTime);
            } else {
                updateConnectionStatus('slow', responseTime);
            }
        } else if (response.status === 503) {
            // –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –µ—â–µ –Ω–µ –≥–æ—Ç–æ–≤–∞ - –Ω–æ –ù–ï –±–ª–æ–∫–∏—Ä—É–µ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
            updateConnectionStatus('slow', null);
        } else {
            updateConnectionStatus('slow', responseTime);
        }
        
    } catch (error) {
        console.log('–°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –ø—Ä–æ–≤–µ—Ä—è–µ—Ç—Å—è:', error.message);
        if (error.name === 'TimeoutError') {
            updateConnectionStatus('slow', null);
        } else {
            updateConnectionStatus('offline', null);
        }
        
        // –ù–ï –±–ª–æ–∫–∏—Ä—É–µ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –ø—Ä–∏ –æ—à–∏–±–∫–∞—Ö
    }
}

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è - –ë–ï–ó –ë–õ–û–ö–ò–†–û–í–ö–ò
function updateConnectionStatus(status, responseTime) {
    const connectionEl = document.getElementById('connection-status');
    if (!connectionEl) return;
    
    // –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ –∫–ª–∞—Å—Å—ã
    connectionEl.className = 'connection-status';
    
    // –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–π –∫–ª–∞—Å—Å —Å—Ç–∞—Ç—É—Å–∞
    connectionEl.classList.add(status);
    
    const textEl = connectionEl.querySelector('span');
    
    switch (status) {
        case 'online':
            textEl.textContent = 'üü¢ –û–Ω–ª–∞–π–Ω';
            break;
        case 'slow':
            textEl.textContent = 'üü° –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ...';
            break;
        case 'offline':
            textEl.textContent = 'üî¥ –û—Ñ–ª–∞–π–Ω';
            break;
    }
}

// –ú–ì–ù–û–í–ï–ù–ù–´–ô –ó–ê–ü–£–°–ö: –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å —Å—Ä–∞–∑—É, –ø—Ä–æ–≤–µ—Ä–∫–∞ –≤ —Ñ–æ–Ω–µ
document.addEventListener('DOMContentLoaded', () => {
    // –°–†–ê–ó–£ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —á—Ç–æ –∏–¥–µ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ
    updateConnectionStatus('slow', null);
    
    // –ú–ì–ù–û–í–ï–ù–ù–ê–Ø –ø–µ—Ä–≤–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ (–±–µ–∑ –∑–∞–¥–µ—Ä–∂–∫–∏)
    setTimeout(() => {
        checkConnection();
    }, 500); // –í—Å–µ–≥–æ 0.5 —Å–µ–∫—É–Ω–¥—ã –∑–∞–¥–µ—Ä–∂–∫–∏
    
    // –†–µ–≥—É–ª—è—Ä–Ω—ã–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–∞–∂–¥—ã–µ 10 —Å–µ–∫—É–Ω–¥ (–≤–º–µ—Å—Ç–æ 15)
    setInterval(checkConnection, 10000);
}); 