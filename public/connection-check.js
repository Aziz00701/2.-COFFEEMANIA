// –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å —Å–µ—Ä–≤–µ—Ä–æ–º - –ò–°–ü–†–ê–í–õ–ï–ù–û: –ª—É—á—à–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫
async function checkConnection() {
    const connectionEl = document.getElementById('connection-status');
    if (!connectionEl) return;
    
    const startTime = Date.now();
    
    try {
        const response = await fetch('/api/stats', {
            method: 'GET',
            cache: 'no-cache',
            signal: AbortSignal.timeout(8000) // –£–≤–µ–ª–∏—á–µ–Ω–Ω—ã–π —Ç–∞–π–º–∞—É—Ç
        });
        
        const endTime = Date.now();
        const responseTime = endTime - startTime;
        
        if (response.ok) {
            const data = await response.json();
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –¥–∞–Ω–Ω—ã–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ
            if (typeof data.totalCustomers === 'number') {
                updateConnectionStatus('online', responseTime);
            } else {
                updateConnectionStatus('slow', responseTime);
            }
        } else if (response.status === 503) {
            // –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –µ—â–µ –Ω–µ –≥–æ—Ç–æ–≤–∞
            updateConnectionStatus('slow', null);
        } else {
            updateConnectionStatus('slow', responseTime);
        }
        
    } catch (error) {
        console.log('–°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ:', error.message);
        if (error.name === 'TimeoutError') {
            updateConnectionStatus('slow', null);
        } else {
            updateConnectionStatus('offline', null);
        }
    }
}

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è - –ò–°–ü–†–ê–í–õ–ï–ù–û: —É–ø—Ä–æ—â–µ–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
function updateConnectionStatus(status, responseTime) {
    const connectionEl = document.getElementById('connection-status');
    if (!connectionEl) return;
    
    // –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ –∫–ª–∞—Å—Å—ã
    connectionEl.className = 'connection-status';
    
    // –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–π –∫–ª–∞—Å—Å —Å—Ç–∞—Ç—É—Å–∞
    connectionEl.classList.add(status);
    
    const textEl = connectionEl.querySelector('span');
    
    switch (status) {
        case 'online':
            textEl.textContent = 'üü¢ –û–Ω–ª–∞–π–Ω';
            break;
        case 'slow':
            textEl.textContent = 'üü° –ú–µ–¥–ª–µ–Ω–Ω–æ';
            break;
        case 'offline':
            textEl.textContent = 'üî¥ –û—Ñ–ª–∞–π–Ω';
            break;
    }
}

// –ó–∞–ø—É—Å–∫ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è - –ò–°–ü–†–ê–í–õ–ï–ù–û: —É–≤–µ–ª–∏—á–µ–Ω–∞ –∑–∞–¥–µ—Ä–∂–∫–∞
document.addEventListener('DOMContentLoaded', () => {
    setTimeout(() => {
        checkConnection();
        setInterval(checkConnection, 15000); // –ö–∞–∂–¥—ã–µ 15 —Å–µ–∫—É–Ω–¥
    }, 3000); // –£–≤–µ–ª–∏—á–µ–Ω–∞ –∑–∞–¥–µ—Ä–∂–∫–∞ –¥–æ 3 —Å–µ–∫—É–Ω–¥
}); 