// –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å —Å–µ—Ä–≤–µ—Ä–æ–º
async function checkConnection() {
    const connectionEl = document.getElementById('connection-status');
    if (!connectionEl) return;
    
    const startTime = Date.now();
    
    try {
        const response = await fetch('/api/stats', {
            method: 'GET',
            cache: 'no-cache',
            signal: AbortSignal.timeout(5000) // –¢–∞–π–º–∞—É—Ç 5 —Å–µ–∫—É–Ω–¥
        });
        
        const endTime = Date.now();
        const responseTime = endTime - startTime;
        
        if (response.ok) {
            updateConnectionStatus('online', responseTime);
        } else {
            updateConnectionStatus('slow', responseTime);
        }
        
    } catch (error) {
        console.log('–°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ:', error.message);
        updateConnectionStatus('offline', null);
    }
}

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è
function updateConnectionStatus(status, responseTime) {
    const connectionEl = document.getElementById('connection-status');
    if (!connectionEl) return;
    
    // –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ –∫–ª–∞—Å—Å—ã
    connectionEl.className = 'connection-status';
    
    // –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–π –∫–ª–∞—Å—Å —Å—Ç–∞—Ç—É—Å–∞
    connectionEl.classList.add(status);
    
    const textEl = connectionEl.querySelector('span');
    
    switch (status) {
        case 'online':
            if (responseTime < 500) {
                textEl.textContent = `üü¢ –û—Ç–ª–∏—á–Ω–æ–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ (${responseTime}–º—Å)`;
            } else if (responseTime < 1000) {
                textEl.textContent = `üü° –•–æ—Ä–æ—à–µ–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ (${responseTime}–º—Å)`;
            } else {
                textEl.textContent = `üü† –ú–µ–¥–ª–µ–Ω–Ω–æ–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ (${responseTime}–º—Å)`;
            }
            break;
        case 'slow':
            textEl.textContent = `üü° –ú–µ–¥–ª–µ–Ω–Ω–æ–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ (${responseTime || '?'}–º—Å)`;
            break;
        case 'offline':
            textEl.textContent = 'üî¥ –ù–µ—Ç —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å —Å–µ—Ä–≤–µ—Ä–æ–º';
            break;
    }
}

// –ó–∞–ø—É—Å–∫ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è
document.addEventListener('DOMContentLoaded', () => {
    setTimeout(() => {
        checkConnection();
        setInterval(checkConnection, 10000); // –ö–∞–∂–¥—ã–µ 10 —Å–µ–∫—É–Ω–¥
    }, 1000);
}); 